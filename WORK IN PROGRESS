WORK IN PROGRESS
РАБОТАТЬ ЗДЕСЬ

amalgam/
│
├── cmd/
│   └── main.go                 // Главный исполняемый файл для запуска блокчейна
│
├── pkg/
│   ├── api/
│   │   └── api.go              // Функции и структуры, связанные с API для взаимодействия с блокчейном
│   │
│   ├── blockchain/
│   │   ├── block.go            // Функции и структуры, связанные с блоками и блокчейном
│   │   └── consensus.go        // Функции и структуры, связанные с консенсусом DPoS
│   │
│   ├── ipfs/
│   │   └── ipfs.go             // Функции и структуры, связанные с интеграцией IPFS
│   │
│   ├── tokens/
│   │   └── tokens.go           // Функции и структуры для создания и управления токенами
│   │
│   └── contracts/
│       └── contracts.go        // Функции и структуры для создания и управления смарт-контрактами
│
├── docs/
│   ├── README.md               // Общая документация по проекту
│   ├── README_ru.md            // Документация на русском языке
│   ├── README_en.md            // Документация на английском языке
│   ├── README_fr.md            // Документация на французском языке
│   ├── README_de.md            // Документация на немецком языке
│   ├── README_cn.md            // Документация на китайском языке
│   └── README_ja.md            // Документация на японском языке
│
├── whitepaper/
│   └── whitepaper.pdf          // Файл White Paper
│
└── .gitignore                  // Файл для игнорирования определенных файлов и каталогов Git'ом


DPoS основан на концепции выбора делегатов, которые будут подтверждать блоки и поддерживать сеть. Вместо того чтобы каждый участник сети участвовал в процессе, делегаты будут выбираться на основе количества их стейкинга или залогов. Это обеспечивает большую эффективность и безопасность, чем простая Proof of Stake.

Теперь перейдем к IPFS (InterPlanetary File System) - это протокол и сеть для хранения и обмена данных в распределенной файловой системе. IPFS использует контент-ориентированное хеширование для обеспечения уникальности данных и позволяет получить данные по их хешам.

Создать функцию для генерации и хранения пары ключей для каждого участника сети.
Реализовать механизм стейкинга и выбора делегатов на основе их стейкинга.
Создать функцию для добавления блоков в блокчейн, которая будет проверять достаточность стейкинга делегата и подтверждать блоки.
Интегрировать поддержку IPFS для хранения данных о взаимодействиях между пользователями и использовать хеш данных для добавления их в блокчейн.